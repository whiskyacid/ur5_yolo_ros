<launch>

    <!-- 启动 gazebo -->   
    <include file="$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name="gui" value="true"/>
    </include>

    <!-- 将 Urdf 文件的内容加载到参数服务器 -->
    <param name="robot_description" command="$(find xacro)/xacro $(find ur_gazebo)/urdf/ur5_gripper_realsense.xacro" />

    <!-- Rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find ur_gazebo)/config/config.rviz"/>

    <!-- 在 gazebo 中显示机器人模型 -->
    <node pkg="gazebo_ros" type="spawn_model" name="model" args="-urdf -param robot_description -model my_ur5 " respawn="false" output="screen" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="50.0" />
        <param name="tf_prefix" type="string" value="" />
    </node>

    
    <node pkg="rostopic" type="rostopic" name="fake_joint_calibration" args="pub /calibrated std_msgs/Bool true" />
  
    <node pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" name="joint_state_publisher_gui" />
    
    <rosparam file="$(find ur5_gripper_moveit_config)/config/gazebo_controllers.yaml" command="load"/>
    <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

    <!-- <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/> -->
    <!-- <rosparam file="$(find ur5_gripper_moveit_config)/config/ros_contrillers.yaml" command="load"/>
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller gripper_controller" respawn="false" output="screen"/>

    
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" /> -->
    
</launch>
